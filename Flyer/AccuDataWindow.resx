<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAM4AAAEACADuBwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAAAzggDAAAA5jksJAAAAv1Q
        TFRF////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtkj8AAAAP50Uk5T
        AP4BAv38BQMGBPj69fvqCAfzDg0Q9iUXve8j6ffO3fEfDObf4hYKGQkiHQtX5boyJK++f5Ns7kbV4+yd
        qibYmhJtReBngrkxE9nt5zQacCqItU+AvFjQ6/lZFNxO8EqKD9McM7aVi7FUaFHRNxEo8hinZBulsnxh
        rXOBlPRCfjxd4Zsp6DpMLUQVzaxVkKaZesk4QUlAYNa75KvC0syXuMDXUMt3qMjadqmMMB5ihsEgjVJD
        ZaE+e4Mh26Leyl+Eb1M1Y8RyLKM5ns90Vm6HxXiJSJFeW8OYxn1arjbUx01moI89tFyfP5acji6weUtr
        kmlHpIW/O7MvJytqcbdjL+ZYAAAACXBIWXMAAA7EAAAOxAGVKw4bAAADjUlEQVR42u2dQYLjMAgEqf9/
        eq9z2JnYsYBusO6xqIqMJCwnEVsbQKymZ60CfrTd9AsNwGYB/K/tpl8jgN/bbvoF/Hxoy/FnC+BK200/
        lp/LbTf9RAGXkOcKuPiND+W/PuInCrh1x48TcDPhDUsBtxP+qEngiwlvEP9X8/2cVQDP+VlCz6+fW0E/
        jR+O8bOBnr8+PZ/+b37m4xNDBgDP8Y0HAOTwM5v+Mz+j6blwpcH0A/hP4oddPRQK+JlKf5WfofSELz8U
        8jOS/gY/K/BNToZAFr/DAIAWfsbRc/Pyw+hv8zOL3o6/AD90D0ZAPz+D6PmqnzH0X/Izhd6Gn0p8vfOh
        qPEzgv4BPxPoedDnAPpH/PjTP+PHnp6HPbvjS/PTiN//kgA48ONMf4IfY3qOhGBLL8qPGT+u9JyKw5P+
        HD+W9B/CLudHCr96AIAzP+Pwg0IBsJkfBvBjRs/xuKzoE/hxos/gZxJ+Pj9M48eGPokfF3qyQvSgb+UH
        C/5Quq8a8CPl0jCdH3363CwlT5+dpeXxs2epEfhxuINN/Ay4/Y/ze2X/h+Eqp8CSPYr12v9EpLKroOjm
        b3YQEgJUy94HA7R87HMyOL+Hvg38Okc+zkfldeQpISS9inhxOC7HndNiEXsoZsCf6qA+CKnn4h0RKJ2M
        aOld52hM+PEfdRCmAppyEUICStfjx+89jfPB/vwJzyVqcq/CKwKtc8/ptyTCjD/jPaHt/Pdi7F5+RvQq
        aF9+R2Kz2IlHNCqw234ddrCCP87+dKmlgDj389W4Cjj0FwYYC4gDf2Nkzv+DQKcGGeVNrAwdPo3lAl7+
        3QJYLoDlAlgu4OV/BawWwHIBL/9uASwXwHIBL/8r4E0B7yw4UAAiCjq/1d21gNu9jxQgoKA9sTWnAoXM
        3qpAY2prVKAyt7cZ0Fnc9CiQWt11KBBb3tYrkFvfVysQ3ODUKpDc4RUqUN3ilhnQ3eMXKVAucpQo0K7y
        5CtQL3OlZ0P9Ol+yAodCZ6oCj0pvngGbUneWAp9af79YmxGQdXO1CpBIsH0C8q4eFgI0Vpp9AjI7cBCQ
        2oWBAJWig8NmKLfwJL8dzi4+tghQKkA3CEjvLLQF5HenLaCgP2kBBT2GsoCCPkNZQEGvoSwglrTt/LGd
        P5bjPz8hMlFALBcQywXEcgGxXEAsFxDLBcRuARG7BcRyAbFcQCwXEMsFxHIBEasNeMT5D4/XTjepejgA
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>